/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 Nave.glb -t -T -s 
Files: Nave.glb [10.9MB] > C:\Users\unime\OneDrive\Documentos\Semillero de investigacion\portfolio-cbtic\public\Models\cbtic\Nave-transformed.glb [474.89KB] (96%)
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cube015: THREE.Mesh;
    Cube002: THREE.Mesh;
    Cylinder001: THREE.Mesh;
    Cylinder003: THREE.Mesh;
    Cube010: THREE.Mesh;
    Cube: THREE.Mesh;
    Cube014: THREE.Mesh;
    Sphere: THREE.Mesh;
    Torus: THREE.Mesh;
    Cube009: THREE.Mesh;
    Cube017: THREE.Mesh;
    Cube018: THREE.Mesh;
  };
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial;
    PaletteMaterial002: THREE.MeshStandardMaterial;
    pared: THREE.MeshStandardMaterial;
    PaletteMaterial003: THREE.MeshStandardMaterial;
    PaletteMaterial004: THREE.MeshStandardMaterial;
    PaletteMaterial005: THREE.MeshStandardMaterial;
    ["MARCO PUERTA"]: THREE.MeshStandardMaterial;
    piso: THREE.MeshStandardMaterial;
    FRENTE: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

type ActionName =
  | "Cylinder.003|Cylinder.003|Cylinder.003Action"
  | "Cube.014|Cube.014|Cylinder.003Action";
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}
type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function Nave_decapred(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null!);
  const { nodes, materials, animations } = useGLTF(
    "/Models/cbtic/Nave-transformed.glb"
  ) as GLTFResult;
  const { actions } = useAnimations(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="Cube015"
          castShadow
          receiveShadow
          geometry={nodes.Cube015.geometry}
          material={nodes.Cube015.material}
          position={[-22.644, 0, -10.48]}
        />
        <mesh
          name="Cube002"
          castShadow
          receiveShadow
          geometry={nodes.Cube002.geometry}
          material={materials.PaletteMaterial001}
          position={[19.379, -0.825, 0]}
        />
        <mesh
          name="Cylinder001"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder001.geometry}
          material={materials.PaletteMaterial002}
          position={[12.508, -11.703, 4.134]}
          scale={0.449}
        />
        <mesh
          name="Cylinder003"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder003.geometry}
          material={materials.PaletteMaterial002}
          position={[-14.439, -11.703, 15.988]}
          rotation={[Math.PI, 0, Math.PI]}
          scale={0.449}
        />
        <mesh
          name="Cube010"
          castShadow
          receiveShadow
          geometry={nodes.Cube010.geometry}
          material={materials.pared}
          position={[-1.073, -5.737, 1.956]}
          rotation={[Math.PI, 0, Math.PI]}
        />
        <mesh
          name="Cube"
          castShadow
          receiveShadow
          geometry={nodes.Cube.geometry}
          material={materials.PaletteMaterial003}
          position={[15.461, 14.326, 4.661]}
        />
        <mesh
          name="Cube014"
          castShadow
          receiveShadow
          geometry={nodes.Cube014.geometry}
          material={nodes.Cube014.material}
          position={[-14.439, -11.703, 15.988]}
          rotation={[Math.PI, 0, Math.PI]}
          scale={0.449}
        />
        <mesh
          name="Sphere"
          castShadow
          receiveShadow
          geometry={nodes.Sphere.geometry}
          material={materials.PaletteMaterial004}
          position={[-1.08, 49.307, 9.763]}
          rotation={[0, Math.PI / 2, 0]}
          scale={13.899}
        />
        <mesh
          name="Torus"
          castShadow
          receiveShadow
          geometry={nodes.Torus.geometry}
          material={materials.PaletteMaterial005}
          position={[-0.634, 11.669, -7.6]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.721}
        />
        <mesh
          name="Cube009"
          castShadow
          receiveShadow
          geometry={nodes.Cube009.geometry}
          material={materials["MARCO PUERTA"]}
          position={[-22.644, 0, -10.48]}
        />
        <mesh
          name="Cube017"
          castShadow
          receiveShadow
          geometry={nodes.Cube017.geometry}
          material={materials.piso}
          position={[0, -6.508, -10.828]}
        />
        <mesh
          name="Cube018"
          castShadow
          receiveShadow
          geometry={nodes.Cube018.geometry}
          material={materials.FRENTE}
          position={[20.379, -0.438, 30.621]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/Models/cbtic/Nave-transformed.glb");
